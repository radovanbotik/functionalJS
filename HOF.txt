                        HOFs

1.  Each piece of code should only have one responsibility.

2.  If given piece of code does requires you to name 2 or more things 
    you should consider refactoring.

1.  We define our multiply function 
    const multiply = (x,y) => x*you
2.  We create function that performs checks, this function takes in the
    function we want to call and returns new function that receives args from
    fn we want to call to check

    we create a condition and create scenarios for fail and success
    if it succeeded we return this fn with arguments 

    const check = (fn) => {
        return (...args) => {
            if(args[1] === 0) {
                console.log('trying to multiply by 0')
                return null
            }
            return fn(...args)
        }
    }

3.  to run check we create a new function and save a value
    of our checking function with our multiply function invoking it

const validate =  check(multiply)

4.  we invoke validate function with numbers/arguments we want to check

validate(2,1)
validate(2,0)
...